<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.colin.shardingjdbcdemo.mapper.log.SysLogsMapper">
  <resultMap id="BaseResultMap" type="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="APPLICATION_NAME" jdbcType="VARCHAR" property="applicationName" />
    <result column="LOG_TYPE" jdbcType="INTEGER" property="logType" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="OPERATE_USER" jdbcType="VARCHAR" property="operateUser" />
    <result column="OPERATE_TIME" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="MODULE_NAME" jdbcType="VARCHAR" property="moduleName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    <result column="DESCRIPTION" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, APPLICATION_NAME, LOG_TYPE, IP, OPERATE_USER, OPERATE_TIME, MODULE_NAME, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    DESCRIPTION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogsCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogsCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_logs
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_logs
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogsCriteria">
    delete from sys_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    insert into sys_logs (ID, APPLICATION_NAME, LOG_TYPE, 
      IP, OPERATE_USER, OPERATE_TIME, 
      MODULE_NAME, CREATE_TIME, DESCRIPTION
      )
    values (#{id,jdbcType=BIGINT}, #{applicationName,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER}, 
      #{ip,jdbcType=VARCHAR}, #{operateUser,jdbcType=VARCHAR}, now(),
      #{moduleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    insert into sys_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="applicationName != null">
        APPLICATION_NAME,
      </if>
      <if test="logType != null">
        LOG_TYPE,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="operateUser != null">
        OPERATE_USER,
      </if>
      <if test="operateTime != null">
        OPERATE_TIME,
      </if>
      <if test="moduleName != null">
        MODULE_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="applicationName != null">
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operateUser != null">
        #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogsCriteria" resultType="java.lang.Long">
    select count(*) from sys_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_logs
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.applicationName != null">
        APPLICATION_NAME = #{record.applicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        LOG_TYPE = #{record.logType,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.operateUser != null">
        OPERATE_USER = #{record.operateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null">
        OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moduleName != null">
        MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_logs
    set ID = #{record.id,jdbcType=BIGINT},
      APPLICATION_NAME = #{record.applicationName,jdbcType=VARCHAR},
      LOG_TYPE = #{record.logType,jdbcType=INTEGER},
      IP = #{record.ip,jdbcType=VARCHAR},
      OPERATE_USER = #{record.operateUser,jdbcType=VARCHAR},
      OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DESCRIPTION = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_logs
    set ID = #{record.id,jdbcType=BIGINT},
      APPLICATION_NAME = #{record.applicationName,jdbcType=VARCHAR},
      LOG_TYPE = #{record.logType,jdbcType=INTEGER},
      IP = #{record.ip,jdbcType=VARCHAR},
      OPERATE_USER = #{record.operateUser,jdbcType=VARCHAR},
      OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      MODULE_NAME = #{record.moduleName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    update sys_logs
    <set>
      <if test="applicationName != null">
        APPLICATION_NAME = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        LOG_TYPE = #{logType,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operateUser != null">
        OPERATE_USER = #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduleName != null">
        MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    update sys_logs
    set APPLICATION_NAME = #{applicationName,jdbcType=VARCHAR},
      LOG_TYPE = #{logType,jdbcType=INTEGER},
      IP = #{ip,jdbcType=VARCHAR},
      OPERATE_USER = #{operateUser,jdbcType=VARCHAR},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      DESCRIPTION = #{description,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.colin.shardingjdbcdemo.entity.log.SysLogs">
    update sys_logs
    set APPLICATION_NAME = #{applicationName,jdbcType=VARCHAR},
      LOG_TYPE = #{logType,jdbcType=INTEGER},
      IP = #{ip,jdbcType=VARCHAR},
      OPERATE_USER = #{operateUser,jdbcType=VARCHAR},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      MODULE_NAME = #{moduleName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>